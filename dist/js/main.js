(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,"body {\r\n  background-color: gainsboro;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.to-do-list {\r\n  width: 375px;\r\n  background-color: white;\r\n  margin: 50px;\r\n  box-shadow: 10px 10px 10px gray;\r\n}\r\n\r\n.what-to-do {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 10px;\r\n}\r\n\r\n.recycle-icon {\r\n  width: 20px;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  font-weight: normal;\r\n}\r\n\r\ntextarea {\r\n  width: 50%;\r\n  border: none;\r\n  padding-top: 1.3em;\r\n  resize: none;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n.icon-font {\r\n  font-size: 15px;\r\n  width: 15px;\r\n  vertical-align: middle;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 1.3em;\r\n}\r\n\r\n.write-task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid gainsboro;\r\n  height: 50px;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n}\r\n\r\n#task-text {\r\n  border: none;\r\n  font-size: 15px;\r\n  text-align: left;\r\n  padding-left: 2em;\r\n}\r\n\r\n.enter-icon {\r\n  width: 20px;\r\n}\r\n\r\n.task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid gainsboro;\r\n  padding: 0 10px;\r\n}\r\n\r\n.clear-button {\r\n  border: none;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: black;\r\n  color: chartreuse;\r\n}\r\n\r\n.task p {\r\n  border: none;\r\n  font-size: 15px;\r\n  text-align: left;\r\n  width: 100%;\r\n  padding-left: 2em;\r\n}\r\n\r\n.active-item,\r\ntextarea {\r\n  background-color: chartreuse;\r\n  font-size: 1.1em;\r\n}\r\n\r\ntextarea:focus,\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.completed-item {\r\n  background-color: rgb(212, 210, 210);\r\n}\r\n\r\n.completed-item textarea {\r\n  background-color: rgb(212, 210, 210);\r\n  color: dimgrey;\r\n  text-decoration: line-through;\r\n}\r\n\r\n.active-item h1 {\r\n  background-color: chartreuse;\r\n  font-weight: bolder;\r\n  text-align: center;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,2BAA2B;EAC3B,yCAAyC;EACzC,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,YAAY;EACZ,+BAA+B;AACjC;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,UAAU;EACV,YAAY;EACZ,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,eAAe;EACf,WAAW;EACX,sBAAsB;EACtB,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,+BAA+B;EAC/B,YAAY;EACZ,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,+BAA+B;EAC/B,eAAe;AACjB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,gBAAgB;EAChB,WAAW;EACX,iBAAiB;AACnB;;AAEA;;EAEE,4BAA4B;EAC5B,gBAAgB;AAClB;;AAEA;;EAEE,aAAa;AACf;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;EACpC,cAAc;EACd,6BAA6B;AAC/B;;AAEA;EACE,4BAA4B;EAC5B,mBAAmB;EACnB,kBAAkB;AACpB",sourcesContent:["body {\r\n  background-color: gainsboro;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.to-do-list {\r\n  width: 375px;\r\n  background-color: white;\r\n  margin: 50px;\r\n  box-shadow: 10px 10px 10px gray;\r\n}\r\n\r\n.what-to-do {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 10px;\r\n}\r\n\r\n.recycle-icon {\r\n  width: 20px;\r\n}\r\n\r\n.title {\r\n  font-size: 20px;\r\n  font-weight: normal;\r\n}\r\n\r\ntextarea {\r\n  width: 50%;\r\n  border: none;\r\n  padding-top: 1.3em;\r\n  resize: none;\r\n}\r\n\r\n.hide {\r\n  display: none;\r\n}\r\n\r\n.icon-font {\r\n  font-size: 15px;\r\n  width: 15px;\r\n  vertical-align: middle;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-top: 1.3em;\r\n}\r\n\r\n.write-task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid gainsboro;\r\n  height: 50px;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n}\r\n\r\n#task-text {\r\n  border: none;\r\n  font-size: 15px;\r\n  text-align: left;\r\n  padding-left: 2em;\r\n}\r\n\r\n.enter-icon {\r\n  width: 20px;\r\n}\r\n\r\n.task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid gainsboro;\r\n  padding: 0 10px;\r\n}\r\n\r\n.clear-button {\r\n  border: none;\r\n  width: 100%;\r\n  height: 50px;\r\n  background-color: black;\r\n  color: chartreuse;\r\n}\r\n\r\n.task p {\r\n  border: none;\r\n  font-size: 15px;\r\n  text-align: left;\r\n  width: 100%;\r\n  padding-left: 2em;\r\n}\r\n\r\n.active-item,\r\ntextarea {\r\n  background-color: chartreuse;\r\n  font-size: 1.1em;\r\n}\r\n\r\ntextarea:focus,\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\n.completed-item {\r\n  background-color: rgb(212, 210, 210);\r\n}\r\n\r\n.completed-item textarea {\r\n  background-color: rgb(212, 210, 210);\r\n  color: dimgrey;\r\n  text-decoration: line-through;\r\n}\r\n\r\n.active-item h1 {\r\n  background-color: chartreuse;\r\n  font-weight: bolder;\r\n  text-align: center;\r\n}\r\n"],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],s=0;s<e.length;s++){var c=e[s],d=r.base?c[0]+r.base:c[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=n(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var h=o(u,r);r.byIndex=s,t.splice(s,0,{identifier:A,updater:h,references:1})}i.push(A)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var s=n(a[i]);t[s].references--}for(var c=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e+"../"})(),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),s=n(565),c=n.n(s),d=n(216),l=n.n(d),A=n(589),p=n.n(A),u=n(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),t()(u.Z,h),u.Z&&u.Z.locals&&u.Z.locals;const f=n.p+"images/b269d67790d91142d672.svg",g=n.p+"images/78a8c10451a6d7b9e0c7.svg",m=n.p+"images/8a2f34afa53158a55dfd.svg",E=class{constructor(){return document.querySelector(".clear-button").addEventListener("click",(()=>{this.clearAllCompleted()})),this}updateStatus=e=>{e.addEventListener("change",(()=>{if(e.checked){const t=parseInt(e.getAttribute("data-index"),10),n=this.todaysToDoList.findIndex((e=>e.index===t));this.todaysToDoList[n].completed=!0,e.parentElement.classList.toggle("completed-item")}else e.parentElement.classList.toggle("completed-item");this.addToLocalStorage()}))};clearAllCompleted(){this.todaysToDoList=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[],this.todaysToDoList.forEach((e=>{e.completed&&(this.todaysToDoList=this.todaysToDoList.filter((e=>!e.completed)),this.addToLocalStorage(),this.display())}))}};(new class extends E{todaysToDoList=[];placeholder=document.querySelector(".placeholder");todo=document.querySelector("input");constructor(){super();const e=new Image;e.src=g,e.classList.add("recycle-icon"),document.querySelector(".what-to-do").append(e);const t=new Image;return t.src=m,t.classList.add("enter-icon"),t.addEventListener("click",(()=>{this.createNewToDo({description:this.todo.value,completed:!1,index:this.todaysToDoList.length+1})})),document.querySelector(".write-task").append(t),this.todo.addEventListener("keypress",(e=>{if(13===e.keyCode&&""!==this.todo.value){const e=this.todaysToDoList.length+1;this.todaysToDoList.push({description:this.todo.value,completed:!1,index:e}),this.addToLocalStorage(),this.display(),this.todo.value=""}})),this}addToLocalStorage=()=>{localStorage.setItem("todos",JSON.stringify(this.todaysToDoList))};updateToDo=(e,t)=>{const n=parseInt(t.getAttribute("data-index"),10);this.todaysToDoList=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[];const r=this.todaysToDoList.findIndex((e=>e.index===n));this.todaysToDoList.forEach(((e,n)=>{n===r&&(e.description=t.value)})),this.addToLocalStorage(),this.display()};enumArrayElements=()=>{let e=0;this.todaysToDoList.forEach(((t,n)=>{e+=1,this.todaysToDoList[n].index=e}))};createNewToDo=e=>{const t=document.createElement("div");t.classList.add("task","active-item"),t.addEventListener("click",(()=>{t.querySelector(".fa").style.display="none"===t.querySelector(".fa").style.display?"block":"none",t.querySelector("img").style.display="none"===t.querySelector("img").style.display?"block":"none"})),this.placeholder.append(t);const n=document.createElement("input");n.classList.add("check-box"),n.setAttribute("type","checkbox"),n.setAttribute("data-index",e.index),t.appendChild(n);const r=document.createElement("textarea");r.value=e.description,r.setAttribute("data-index",e.index),r.addEventListener("focusout",(e=>this.updateToDo(e,r))),t.appendChild(r);const o=new Image;o.src=f,o.addEventListener("click",(()=>{this.createNewToDo({description:this.todo.value,completed:!1,index:this.todaysToDoList.length+1})})),t.appendChild(o);const a=document.createElement("i");return a.classList.add("fa","fa-trash-o","icon-font"),a.setAttribute("data-index",e.index),a.addEventListener("mousedown",(()=>{this.deleteToDos(e.index)})),a.style.display="none",t.appendChild(a),this.addToLocalStorage(),this.updateStatus(n),t};deleteToDos=e=>{const t=parseInt(e,10);if(1===this.todaysToDoList.length)this.todaysToDoList=[];else{const e=parseInt(this.todaysToDoList.findIndex((e=>e.index===t)),10);this.todaysToDoList.splice(e,1)}this.enumArrayElements(),this.addToLocalStorage(),this.display()};display=()=>{this.todaysToDoList=localStorage.getItem("todos")?JSON.parse(localStorage.getItem("todos")):[],this.placeholder.innerHTML="",this.todaysToDoList.forEach((e=>{this.createNewToDo(e)}))}}).display()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,